name: Build, Test, and Prepare for Deployment

on:
  push:
    branches: [ main, master ]
    tags: [ 'v*' ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.GKE_CLUSTER_NAME }}
  GKE_ZONE: ${{ secrets.GKE_ZONE }}
  REGISTRY: gcr.io
  IMAGE_NAME: job-scheduler

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Install dependencies
      run: npm ci
      
    - name: Run linting
      run: npm run lint
      
    - name: Run tests
      run: npm test
      
    - name: Build TypeScript
      run: npm run build
      
    - name: Test Docker build
      run: docker build -t $IMAGE_NAME .

  prepare-deployment:
    name: Prepare for Deployment
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name != 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.PROJECT_ID }}/${{ env.IMAGE_NAME }}
        tags: |
          type=ref,event=branch
          type=ref,event=pr
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}
          type=sha,prefix={{branch}}-
          
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Show deployment instructions
      run: |
        echo "ðŸš€ Deployment Ready!"
        echo "===================="
        echo ""
        echo "âœ… Tests passed"
        echo "âœ… TypeScript compiled"
        echo "âœ… Docker image built"
        echo ""
        echo "ðŸ“¦ Image: ${{ steps.meta.outputs.tags }}"
        echo ""
        echo "ðŸ”§ To deploy to GKE:"
        echo "   1. Build and push to GCR locally:"
        echo "      docker build -t gcr.io/${{ env.PROJECT_ID }}/job-scheduler:latest ."
        echo "      docker push gcr.io/${{ env.PROJECT_ID }}/job-scheduler:latest"
        echo ""
        echo "   2. Deploy using your script:"
        echo "      ./deploy-to-gke.sh deploy"
        echo ""
        echo "   3. Or use the manual deploy workflow in GitHub Actions"
        
    - name: Create deployment summary
      run: |
        echo "## ðŸš€ Deployment Ready!" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Status**: âœ… Ready for deployment" >> $GITHUB_STEP_SUMMARY
        echo "**Image**: ${{ steps.meta.outputs.tags }}" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "**Next Steps**: Use local deployment script or manual workflow" >> $GITHUB_STEP_SUMMARY
